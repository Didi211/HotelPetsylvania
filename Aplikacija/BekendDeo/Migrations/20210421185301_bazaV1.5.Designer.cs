// <auto-generated />
using System;
using BekendDeo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BekendDeo.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20210421185301_bazaV1.5")]
    partial class bazaV15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BekendDeo.Models.Administrator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sifra");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.ToTable("ADMINISTRATOR");
                });

            modelBuilder.Entity("BekendDeo.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sifra");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tip");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Username");

                    b.Property<bool>("Zabrana")
                        .HasColumnType("bit")
                        .HasColumnName("Zabrana");

                    b.HasKey("ID");

                    b.ToTable("KORISNIK");
                });

            modelBuilder.Entity("BekendDeo.Models.Musterija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MusterijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sifra");

                    b.Property<string>("Slika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SlikaPath");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.ToTable("MUSTERIJA");
                });

            modelBuilder.Entity("BekendDeo.Models.Obavestenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ObavestenjeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<bool>("BroadCastFlag")
                        .HasColumnType("bit")
                        .HasColumnName("BroadCastFlag");

                    b.Property<int?>("KomeNamenjeno")
                        .HasColumnType("int")
                        .HasColumnName("KomeNamenjeno");

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Sadrzaj");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("RadnikID");

                    b.ToTable("OBAVESTENJE");
                });

            modelBuilder.Entity("BekendDeo.Models.Pitanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PitanjeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumOdgovora")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumOdgovora");

                    b.Property<DateTime>("DatumPitanja")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPitanja");

                    b.Property<int>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Odgovoreno")
                        .HasColumnType("bit")
                        .HasColumnName("Odgovoreno");

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.Property<string>("TekstOdgovora")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TekstOdgovora");

                    b.Property<string>("TekstPitanja")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TekstPitanja");

                    b.HasKey("ID");

                    b.HasIndex("MusterijaID");

                    b.HasIndex("RadnikID");

                    b.ToTable("PITANJE");
                });

            modelBuilder.Entity("BekendDeo.Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RadnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPocetkaRada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPocetkaRada");

                    b.Property<DateTime?>("DatumPrekidaRada")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPrekidaRada");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("JMBG");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sifra");

                    b.Property<string>("Slika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SlikaPath");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("JMBG")
                        .IsUnique();

                    b.ToTable("RADNIK");
                });

            modelBuilder.Entity("BekendDeo.Models.Recenzija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecenzijaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPostavljanja")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPostavljanja");

                    b.Property<int>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int")
                        .HasColumnName("Ocena");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tekst");

                    b.HasKey("ID");

                    b.HasIndex("MusterijaID");

                    b.ToTable("RECENZIJA");
                });

            modelBuilder.Entity("BekendDeo.Models.Usluga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UslugaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorAddID")
                        .HasColumnType("int");

                    b.Property<int?>("AdministratorIzmenaCeneID")
                        .HasColumnType("int");

                    b.Property<int?>("AdministratorIzmenaKapacitetaID")
                        .HasColumnType("int");

                    b.Property<double>("CenaUsluge")
                        .HasColumnType("float")
                        .HasColumnName("CenaUsluge");

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumDodavanja");

                    b.Property<DateTime?>("DatumIzmeneCene")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumIzmeneCene");

                    b.Property<DateTime?>("DatumIzmeneKapaciteta")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumIzmeneKapaciteta");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int")
                        .HasColumnName("Kapacitet");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Naziv");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tip");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorAddID");

                    b.HasIndex("AdministratorIzmenaCeneID");

                    b.HasIndex("AdministratorIzmenaKapacitetaID");

                    b.HasIndex("Naziv")
                        .IsUnique();

                    b.ToTable("USLUGA");
                });

            modelBuilder.Entity("BekendDeo.Models.Zahtev", b =>
                {
                    b.Property<int>("RezervacioniBroj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervacioniBroj")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Cena")
                        .HasColumnType("float")
                        .HasColumnName("Cena");

                    b.Property<DateTime?>("DatumPocetka")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPocetka");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumZavrsetka");

                    b.Property<int?>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Obradjen")
                        .HasColumnType("bit")
                        .HasColumnName("Obradjen");

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.HasKey("RezervacioniBroj");

                    b.HasIndex("MusterijaID");

                    b.HasIndex("RadnikID");

                    b.ToTable("ZAHTEV");
                });

            modelBuilder.Entity("BekendDeo.Models.ZahtevUsluga", b =>
                {
                    b.Property<int>("ZahtevID")
                        .HasColumnType("int");

                    b.Property<int>("UslugaID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumPocetka")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumPocetka");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatumZavrsetka");

                    b.Property<DateTime?>("Termin")
                        .HasColumnType("datetime2")
                        .HasColumnName("Termin");

                    b.Property<string>("TipUsluge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipUsluge");

                    b.HasKey("ZahtevID", "UslugaID");

                    b.HasIndex("UslugaID");

                    b.ToTable("ZAHTEV_USLUGA");
                });

            modelBuilder.Entity("BekendDeo.Models.Obavestenje", b =>
                {
                    b.HasOne("BekendDeo.Models.Administrator", "Administrator")
                        .WithMany("Obavestenja")
                        .HasForeignKey("AdministratorID");

                    b.HasOne("BekendDeo.Models.Radnik", "Radnik")
                        .WithMany("Obavestenja")
                        .HasForeignKey("RadnikID");

                    b.Navigation("Administrator");

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("BekendDeo.Models.Pitanje", b =>
                {
                    b.HasOne("BekendDeo.Models.Musterija", "Musterija")
                        .WithMany("Pitanja")
                        .HasForeignKey("MusterijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BekendDeo.Models.Radnik", "Radnik")
                        .WithMany("Odgovori")
                        .HasForeignKey("RadnikID");

                    b.Navigation("Musterija");

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("BekendDeo.Models.Radnik", b =>
                {
                    b.HasOne("BekendDeo.Models.Administrator", "Administrator")
                        .WithMany("DodatiRadnici")
                        .HasForeignKey("AdministratorID");

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("BekendDeo.Models.Recenzija", b =>
                {
                    b.HasOne("BekendDeo.Models.Musterija", "Musterija")
                        .WithMany("Recenzije")
                        .HasForeignKey("MusterijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musterija");
                });

            modelBuilder.Entity("BekendDeo.Models.Usluga", b =>
                {
                    b.HasOne("BekendDeo.Models.Administrator", "AdministratorAdd")
                        .WithMany("DodateUsluge")
                        .HasForeignKey("AdministratorAddID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BekendDeo.Models.Administrator", "AdministratorIzmenaCene")
                        .WithMany("IzmenjeneCene")
                        .HasForeignKey("AdministratorIzmenaCeneID");

                    b.HasOne("BekendDeo.Models.Administrator", "AdministratorIzmenaKapaciteta")
                        .WithMany("IzmenjeniKapaciteti")
                        .HasForeignKey("AdministratorIzmenaKapacitetaID");

                    b.Navigation("AdministratorAdd");

                    b.Navigation("AdministratorIzmenaCene");

                    b.Navigation("AdministratorIzmenaKapaciteta");
                });

            modelBuilder.Entity("BekendDeo.Models.Zahtev", b =>
                {
                    b.HasOne("BekendDeo.Models.Musterija", "Musterija")
                        .WithMany("Zahtevi")
                        .HasForeignKey("MusterijaID");

                    b.HasOne("BekendDeo.Models.Radnik", "Radnik")
                        .WithMany()
                        .HasForeignKey("RadnikID");

                    b.Navigation("Musterija");

                    b.Navigation("Radnik");
                });

            modelBuilder.Entity("BekendDeo.Models.ZahtevUsluga", b =>
                {
                    b.HasOne("BekendDeo.Models.Usluga", "Usluga")
                        .WithMany("PripadaZahtevima")
                        .HasForeignKey("UslugaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BekendDeo.Models.Zahtev", "Zahtev")
                        .WithMany("UslugeZahteva")
                        .HasForeignKey("ZahtevID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usluga");

                    b.Navigation("Zahtev");
                });

            modelBuilder.Entity("BekendDeo.Models.Administrator", b =>
                {
                    b.Navigation("DodateUsluge");

                    b.Navigation("DodatiRadnici");

                    b.Navigation("IzmenjeneCene");

                    b.Navigation("IzmenjeniKapaciteti");

                    b.Navigation("Obavestenja");
                });

            modelBuilder.Entity("BekendDeo.Models.Musterija", b =>
                {
                    b.Navigation("Pitanja");

                    b.Navigation("Recenzije");

                    b.Navigation("Zahtevi");
                });

            modelBuilder.Entity("BekendDeo.Models.Radnik", b =>
                {
                    b.Navigation("Obavestenja");

                    b.Navigation("Odgovori");
                });

            modelBuilder.Entity("BekendDeo.Models.Usluga", b =>
                {
                    b.Navigation("PripadaZahtevima");
                });

            modelBuilder.Entity("BekendDeo.Models.Zahtev", b =>
                {
                    b.Navigation("UslugeZahteva");
                });
#pragma warning restore 612, 618
        }
    }
}
